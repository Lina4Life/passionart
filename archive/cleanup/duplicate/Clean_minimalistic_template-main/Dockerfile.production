# PassionArt Production Dockerfile
FROM node:18-alpine AS frontend-build

# Build frontend
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci --only=production
COPY frontend/ ./
RUN npm run build

# Backend image
FROM node:18-alpine AS backend

# Install dependencies for SQLite
RUN apk add --no-cache sqlite

WORKDIR /app

# Copy backend files
COPY backend/package*.json ./
RUN npm ci --only=production && npm cache clean --force

COPY backend/ ./

# Copy frontend build
COPY --from=frontend-build /app/frontend/dist ./public

# Create uploads directory
RUN mkdir -p uploads data logs

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S passionart -u 1001
RUN chown -R passionart:nodejs /app
USER passionart

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node healthcheck.js

EXPOSE 3001

CMD ["node", "app.js"]
